Versions of WAM-2Layers used and modified in Uni. Reading, UK.

=====
Con_E_Recyc_Masterscript.py
-----
Difference between *Con_E_Recyc_Masterscript.py* here and the same file from *master* branch is the function *get_Sa_track_backward_TIME*.
Here, *get_Sa_track_backward_TIME* includes diagnosis of distance, *Sa_dist_down* & *Sa_dist_top* (Lines 702-827).

Please modify input parameters, mask and I/O directories, accordingly.
=====
Con_E_Recyc_Output.py
-----
Calculate *E_dist* and output in daily and monthly data.
=====
Con_P_Recyc_Masterscript.py
-----
Note that, this version of *Con_P_Recyc_Masterscript.py* is quite different from previous ones:
1. All input/output files are in form of .nc instead of .mat;
2. NetCDF files are read/wrote using CF-Python (https://cfpython.bitbucket.io/);
   CF-Python is free and easy to install. However, only Linux system is fully supported (Developing team here in Reading has limited resourse);
   (If you donot like CF-Python or cannot install on your Windows/Mac laptop, then you could recode this using netCDF4 or let me know.)
3. Output are daily mean with output on the last timestep of the day to be used in for next day calculation;
=====
Con_P_Recyc_Output.py
-----
This code try to calculate monthly mean from daily output using CF-Python;
=====
WAM_functions.pyx  WAM_misc.pyx  get_Sa_track_backward.pyx  get_Sa_track_backward_time.pyx
-----
.pyx is Cython source file;
Cython is Python with C data types;
Note that, *get_Sa_track_backward_time.pyx* is rewrote to allow parallelisation using OpenMP. However, the efficiency of OpenMP need further test;
=====
setup.py
-----
To compile .pyx, a setup script is needed;
setup.py is like Python makefile;
Commmand to build:
	'python setup.py build_ext --inplace';
This yields *WAM_functions.so*;
=====
Con_E_Recyc_Masterscript_an512_R.py
-----
An example script how to include Cython code into WAM-2layers;



=======
Caveat
-------
> I run these codes on a Linux server. However, I have not tested them on other platform;
> For Windows and Mac users, CF-Python may not work. However, CF-Python developing team suggests to install a Linux Virtual Machine (See 'Other Operating Systems' on http://ajheaps.github.io/cf-plot/download.html)
> Examples of Cython code are taken from an attempt of caluclating moisture source of a high resolution simulation. These data ar included here.
> If you are using these codes and encounter error, please send me an email, I will try my best to assist you (l.guo@reading.ac.uk).
